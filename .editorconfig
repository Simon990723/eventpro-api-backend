root = true

[*]
indent_style = space
end_of_line = lf
charset = utf-8
insert_final_newline = true
trim_trailing_whitespace = true
max_line_length = 120

# C# rules
[*.cs]
indent_size = 4
dotnet_sort_system_directives_first = true
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_property = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_event = false:suggestion
dotnet_style_require_accessibility_modifiers = for_non_interface_members:suggestion
csharp_new_line_before_open_brace = all
csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_style_var_elsewhere = true:suggestion
csharp_style_expression_bodied_methods = when_on_single_line:suggestion
csharp_style_expression_bodied_properties = when_on_single_line:suggestion
csharp_style_prefer_switch_expression = true:suggestion
csharp_style_prefer_primary_constructors = true:suggestion
csharp_style_prefer_readonly_struct = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_ternary_operator = true:suggestion
dotnet_style_prefer_collection_expression = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion

# C# naming: interfaces start with I, private fields _camelCase, constants PascalCase
dotnet_naming_rule.interfaces_must_start_with_I.severity = warning
dotnet_naming_rule.interfaces_must_start_with_I.symbols = interfaces
dotnet_naming_rule.interfaces_must_start_with_I.style = prefix_I

dotnet_naming_symbols.interfaces.applicable_kinds = interface
dotnet_naming_symbols.interfaces.applicable_accessibilities = *
dotnet_naming_symbols.interfaces.required_modifiers = *

dotnet_naming_style.prefix_I.required_prefix = I
dotnet_naming_style.prefix_I.capitalization = pascal_case

dotnet_naming_rule.private_fields_underscore.severity = suggestion
dotnet_naming_rule.private_fields_underscore.symbols = private_fields
dotnet_naming_rule.private_fields_underscore.style = prefix_underscore

dotnet_naming_symbols.private_fields.applicable_kinds = field
dotnet_naming_symbols.private_fields.applicable_accessibilities = private
dotnet_naming_symbols.private_fields.required_modifiers = *

dotnet_naming_style.prefix_underscore.required_prefix = _
dotnet_naming_style.prefix_underscore.capitalization = camel_case

dotnet_naming_rule.constants_pascal_case.severity = suggestion
dotnet_naming_rule.constants_pascal_case.symbols = constants
dotnet_naming_rule.constants_pascal_case.style = pascal_case

dotnet_naming_symbols.constants.applicable_kinds = field
dotnet_naming_symbols.constants.applicable_accessibilities = *
dotnet_naming_symbols.constants.required_modifiers = const

dotnet_naming_style.pascal_case.capitalization = pascal_case

# TypeScript / JavaScript
[*.{ts,tsx,js,jsx}]
indent_size = 2
quote_type = single
ij_typescript_import_sorting = true
ij_javascript_import_sorting = true

# JSON, YAML
[*.{json,yml,yaml}]
indent_size = 2

# CSS, SCSS
[*.{css,scss}]
indent_size = 2

# Markdown
[*.md]
trim_trailing_whitespace = false
