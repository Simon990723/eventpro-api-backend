name: Deploy to Cloud Run

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: ${{ secrets.GCP_REGION }}
  REPO: ${{ secrets.GCP_ARTIFACT_REPO }}
  SERVICE: ${{ secrets.GCP_SERVICE_NAME }}
  IMAGE: ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_ARTIFACT_REPO }}/${{ secrets.GCP_SERVICE_NAME }}:${{ github.sha }}

jobs:
  deploy:
    name: Build → Push → Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write  # OIDC
    steps:
      - name: Checkout
      - uses: actions/checkout@v4

      - name: Authenticate to Google Cloud (OIDC)
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Configure gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker to use Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: Build container
        run: |
          docker build \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            -t "${IMAGE}" \
            -f ./Dockerfile .

      - name: Push to Artifact Registry
        run: docker push "${IMAGE}"

      - name: Enable required APIs (idempotent)
        run: |
          gcloud services enable run.googleapis.com artifactregistry.googleapis.com --quiet

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy "${SERVICE}" \
            --image "${IMAGE}" \
            --region "${REGION}" \
            --platform managed \
            --allow-unauthenticated \
            --port 8080 \
            --set-env-vars ASPNETCORE_URLS=http://+:8080
