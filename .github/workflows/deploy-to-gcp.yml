name: Deploy Backend to GCP

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # ---- GCP config (adjust only if your infra names change) ----
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}                # e.g. event-pro-473112
  REGION: asia-southeast1                                      # Cloud Run region
  GAR_LOCATION: asia-southeast1                                # Artifact Registry location
  REPOSITORY_NAME: eventpro-repo                               # <- your AR repo from logs
  SERVICE_NAME: eventpro-backend                               # Cloud Run service name

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    concurrency:
      group: deploy-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # --- Keyless auth via Workload Identity Federation ---
      - name: Authenticate to Google Cloud (WIF)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2

      # Optional: show the active account to verify OIDC impersonation worked
      - name: Who am I
        run: gcloud auth list

      # Configure Docker to push to Artifact Registry
      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker "${GAR_LOCATION}-docker.pkg.dev" --quiet

      # Compose image name once and export to env
      - name: Compute image name
        run: |
          echo "IMAGE=${GAR_LOCATION}-docker.pkg.dev/${GCP_PROJECT_ID}/${REPOSITORY_NAME}/${SERVICE_NAME}:${GITHUB_SHA}" >> "$GITHUB_ENV"

      # Build and push
      - name: Build and Push Docker image
        run: |
          docker build -t "$IMAGE" .
          docker push "$IMAGE"

      # Deploy via gcloud (no action outputs; avoids YAML quoting issues)
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy "$SERVICE_NAME" \
            --project "$GCP_PROJECT_ID" \
            --region "$REGION" \
            --platform managed \
            --image "$IMAGE" \
            --port 8080 \
            --quiet

      # Print the URL deterministically
      - name: Show service URL
        run: |
          URL="$(gcloud run services describe "$SERVICE_NAME" \
                --project "$GCP_PROJECT_ID" --region "$REGION" \
                --format='value(status.url)')"
          echo "Cloud Run URL: $URL"
